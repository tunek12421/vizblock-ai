# .github/workflows/ci.yml
name: CI

# Para que GITHUB_TOKEN pueda crear releases
permissions:
  contents: write

on:
  push:
    branches: [main]
    tags: ['*']      # dispara también el job de release al pushear tags semánticos
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      # 1) Checkout completo para poder usar git history en Nx affected
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Instalar Node 20
      - name: 🟢 Setup Node LTS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3) Cache manual de la store de pnpm
      - name: ♻️ Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      # 4) Activar Corepack (trae pnpm listo para usar)
      - name: 🛠 Enable Corepack
        run: |
          corepack enable
          echo "pnpm version: $(pnpm -v)"

      # 5) Instalar dependencias estrictamente según lockfile
      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      # 6) Lint con autofix, Test y Build
      - name: 🔍 Lint all projects (auto-fix)
        run: pnpm nx run-many --target=lint --all --fix

      - name: 🧪 Test all projects
        run: pnpm nx run-many --target=test --all

      - name: 🛠️ Build extension app
        run: pnpm nx build extension

      # 7) Empaquetar extensión
      - name: 📦 Pack extension ZIP
        run: |
          zip -r vizblock-extension.zip dist/apps/extension
          echo "ARTIFACT_PATH=vizblock-extension.zip" >> $GITHUB_ENV

      - name: 🚀 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vizblock-extension
          path: ${{ env.ARTIFACT_PATH }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🔖 Download extension artifact
        uses: actions/download-artifact@v4
        with:
          name: vizblock-extension
          path: .

      - name: 🚢 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: vizblock-extension.zip
          generate_release_notes: true
